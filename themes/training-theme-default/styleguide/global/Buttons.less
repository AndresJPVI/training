.ButtonAbstract {
  cursor: pointer;
  display: inline-block;
  font-weight: bold;
  text-align: center;
  transition: color 250ms, background 250ms, border 250ms;
}

.Button {
  &:extend(.ButtonAbstract all);
  &:extend(.label-4 all);

  align-items: center;
  background: var(--buttonBgColor);
  border: solid 1px var(--buttonTextColor);
  color: var(--buttonTextColor);
  display: flex;
  justify-content: center;
  line-height: 38px; // centers everything perfect, it was off by 1px
  height: 40px;
  width: 280px;

  &:hover,
  &:focus {
    background: var(--buttonBgColor);
    border: solid 1px var(--primaryColor1);
    color: var(--primaryColor1);
  }
}

.ButtonAlt {
  &:extend(.Button all);

  &:hover,
  &:focus {
    background: var(--primaryColor1);
    border: solid 1px var(--primaryColor1);
    color: var(--buttonBgColor);
  }
}

.ButtonInverse {
  &:extend(.Button all);

  background: var(--inverseButtonBgColor);
  border: solid 1px var(--secondaryColor1);
  color: var(--primaryTextColorInverse);

  &:hover,
  &:focus {
    background: var(--grayscaleColor1);
    border: solid 1px var(--secondaryColor5);
    color: var(--secondaryColor5);
  }
}

.ButtonInverseAlt {
  &:extend(.Button all);

  background: var(--grayscaleColor1);
  border: solid 1px var(--secondaryColor1);
  color: var(--secondaryColor5);

  &:hover,
  &:focus {
    background: var(--primaryColor1);
    border: solid 1px var(--primaryColor1);
    color: var(--secondaryColor5);
  }
}

.ButtonPrimary {
  &:extend(.Button all);

  background: var(--primaryColor1);
  border: solid 1px var(--primaryColor1);
  color: var(--secondaryColor5);

  &:hover,
  &:focus {
    background: var(--buttonBgColor);
    border: solid 1px var(--buttonTextColor);
    color: var(--buttonTextColor);
  }
}

.NotButton {
  cursor: pointer;
  display: block;
  background: none;
  border: 0;
  padding: 0;
}

.FollowButton {
  &:extend(.ButtonAbstract all);
  &:extend(.label-3 all);

  background: var(--secondaryColor5);
  border-radius: 2px;
  border: solid 1px var(--secondaryColor2);
  line-height: 16px;
  padding: 2px 0 0;
  min-width: 73px;
  width: 73px; // so the text change doesn't affect button width
  word-break: keep-all;
  height: 20px;
  text-transform: none;

  [data-hover-action] {
    display: none;
  }

  &:hover {
    border: solid 1px var(--primaryColor1);
    color: var(--primaryColor1);

    [data-state] {
      display: none;
    }

    [data-hover-action] {
      display: inline;
    }
  }

  &[data-state-following] {
    background: var(--primaryColor1);
    border: solid 1px var(--primaryColor1);
    color: var(--secondaryColor5);

    &:hover {
      background: var(--secondaryColor5);
      color: var(--primaryColor1);
    }
  }
}

.SectionButton {
  .label-2;
  .NotButton;

  background: none;
  border: 0;
  color: var(--sectionTextColor);
  padding: 0;
  text-transform: uppercase;
  word-break: keep-all;

  &:hover {
    color: var(--primaryColor1);
  }

  &[data-inverse] {
    color: var(--secondaryColor5);

    &:hover {
      color: var(--secondaryColor3);
    }
  }
}

.SectionButtonInverse {
  &:extend(.SectionButton all);

  color: var(--secondaryColor5);

  &:hover {
    color: var(--secondaryColor3);
  }
}

.TagButton {
  .label-1;
  .ButtonAbstract;

  border: 1px solid var(--tagButtonBorderColor);
  color: var(--tagButtonTextColor);
  line-height:  1.18;
  letter-spacing: 1px;
  padding: (@grid-gap / 2.5) @grid-gap ;
  text-transform: uppercase;
  word-break: keep-all;

  &:hover {
    border-color: var(--primaryColor1);
  }
}

.TrendingButton {
  &:extend(.TagButton all);
}

.BreakingButton {
  &:extend(.TagButton all);

  background: var(--breakingColor);
  border-color: var(--breakingColor);

  &:hover {
    background: var(--breakingTextColor);
    border: solid 1px var(--breakingColor);
    color: var(--breakingColor);
  }
}

// The assumption here is that the arrow/chevron and all the other flickity styles
// apply. These styles go over the top of that to get "our" carousel button
// carousel buttons are purposely a little higher than 50%

.FlickityCarouselButton {
  background: var(--secondaryColor5);
  border: 1px solid var(--secondaryColor3);
  border-radius: 0;
  height: 40px;
  top: 44%;
  width: 30px;
  z-index: @z-index-base;

  svg.flickity-button-icon {
    fill: var(--grayscaleColor1);
    height: 54%;
    top: 14px;
    width: 37px;
  }

  &:hover {
    background: var(--primaryColor1);
    border: 1px solid var(--primaryColor1);

    svg.flickity-button-icon {
      fill: var(--secondaryColor5);
    }
  }

  &.previous {
    border-left: 0;

    svg.flickity-button-icon {
      left: -4px;
      top: 3px;
      transform: rotate(-90deg);
    }
  }

  &.next {
    border-right: 0;

    svg.flickity-button-icon {
      left: -3px;
      transform: rotate(-90deg);
    }
  }

  &:disabled {
    cursor: default;
    opacity: 1;

    svg.flickity-button-icon {
      fill: var(--secondaryColor2);
    }
  }
}

.ButtonWithChevron {
  &:extend(.Button all);
  width: 200px;
  color: var(--secondaryTextColor);
  border-color: var(--secondaryColor2);

  svg {
    width: 12px;
    height: 12px;
    transform: rotate(90deg);
    margin: 3px 0 0 (@grid-gap / 2);
  }

  &-alternateText {
    display: none;
  }
}
